name: Build universal wheel

on:
  push:
    branches:
      - master
  pull_request:
    branches:
    - master
  schedule:
  - cron: "0 2 * * 1-5"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python-version: [36]

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.7'

    - name: Install twine/wheel
      run: |
        python -m pip install twine wheel

    - name: chores
      run: |
        mkdir dist

    - name: Build vaex (meta)
      run: |
        (cp README.md packages/vaex/ && cd packages/vaex && python setup.py sdist bdist_wheel); cp packages/vaex/dist/* dist

    - name: Publish a Python distribution to PyPI
      if: startsWith(github.ref, 'refs/tags/meta')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password_vaex }}
      run: |
        twine upload dist/vaex* dist/vaex*

    - name: Build vaex-graphql
      run: |
        (cd packages/vaex-graphql && python setup.py sdist bdist_wheel); cp packages/vaex-graphql/dist/* dist

    - name: Publish a Python distribution to PyPI
      if: startsWith(github.ref, 'refs/tags/graphql')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password_vaex_graphql }}
      run: |
        twine upload dist/vaex-graphql* dist/vaex_graphql*


    - name: Build vaex-jupyter
      run: |
        (cd packages/vaex-jupyter && python setup.py sdist bdist_wheel); cp packages/vaex-jupyter/dist/* dist

    - name: Publish a Python distribution to PyPI
      if: startsWith(github.ref, 'refs/tags/jupyter')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password_vaex_jupyter }}
      run: |
        twine upload dist/vaex-jupyter* dist/vaex_jupyter*

    - name: Build vaex-ml
      run: |
        (cd packages/vaex-ml && python setup.py sdist bdist_wheel); cp packages/vaex-ml/dist/* dist

    - name: Publish a Python distribution to PyPI
      if: startsWith(github.ref, 'refs/tags/ml')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password_vaex_ml }}
      run: |
        twine upload dist/vaex-ml* dist/vaex_ml*

    - name: Build vaex-contrib
      run: |
        (cd packages/vaex-contrib && python setup.py sdist bdist_wheel); cp packages/vaex-contrib/dist/* dist

    - name: Publish a Python distribution to PyPI
      if: startsWith(github.ref, 'refs/tags/contrib')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password_vaex_contrib }}
      run: |
        twine upload dist/vaex-contrib* dist/vaex_contrib*



    - name: Build vaex-viz
      run: |
        (cd packages/vaex-viz && python setup.py sdist bdist_wheel); cp packages/vaex-viz/dist/* dist

    - name: Publish a Python distribution to PyPI
      if: startsWith(github.ref, 'refs/tags/viz')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password_vaex_viz }}
      run: |
        twine upload dist/vaex-viz* dist/vaex_viz*

    - name: Build vaex-astro
      run: |
        (cd packages/vaex-astro && python setup.py sdist bdist_wheel); cp packages/vaex-astro/dist/* dist

    - name: Publish a Python distribution to PyPI
      if: startsWith(github.ref, 'refs/tags/astro')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password_vaex_astro }}
      run: |
        twine upload dist/vaex-astro* dist/vaex_astro*

    - name: Build vaex-hdf5
      run: |
        (cd packages/vaex-hdf5 && python setup.py sdist bdist_wheel); cp packages/vaex-hdf5/dist/* dist

    - name: Publish a Python distribution to PyPI
      if: startsWith(github.ref, 'refs/tags/hdf5')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password_vaex_hdf5 }}
      run: |
        twine upload dist/vaex-hdf5* dist/vaex_hdf5*

    - name: Build vaex-server
      run: |
        (cd packages/vaex-server && python setup.py sdist bdist_wheel); cp packages/vaex-server/dist/* dist

    - name: Publish a Python distribution to PyPI
      if: startsWith(github.ref, 'refs/tags/server')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password_vaex_server }}
      run: |
        openssl sha256 dist/*
        twine upload dist/vaex-server* dist/vaex_server*

    - uses: actions/upload-artifact@v1
      with:
        name: distributions
        path: ./dist

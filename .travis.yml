language: c
dist: trusty
os:
 - linux
 - osx
env:
 matrix:
  - PYTHON_VERSION=3.6
  - PYTHON_VERSION=3.7

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-4.9
      - g++-4.9

before_install:
#  - sudo apt-get update
#  - sudo apt-get install libhdf5-serial-dev libqt4-dev
#  - if [[ $TRAVIS_OS_NAME == linux ]]; then sudo apt-get install libc-bin=2.12.1-0ubuntu10.2 libc6=2.12.1-0ubuntu10.2; fi
  - echo $TRAVIS_TAG
  - if [ "$TRAVIS_TAG" != "" ]; then echo "bla"; fi
  - if [[ $TRAVIS_OS_NAME == linux ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
  - if [[ $TRAVIS_OS_NAME == osx ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
  # we do not install lightgbm on linux/travis, since importing those fail, if we run those tests only on osx, that should be fine
  - export OPTIONAL_PACKAGES="";
  - export PYTEST_EXTRA_ARGS="";
  # - OPTIONAL_PACKAGES="$OPTIONAL_PACKAGES  "; fi
  - travis_wait bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  # future: kapteyn should only be needed for astro package testing
  - conda create -q -n test-environment -c conda-forge python=$PYTHON_VERSION setuptools==42.0.2 certifi=2019.6.16 pip numpy scipy pyqt matplotlib pyopengl h5py numexpr astropy tornado cython runipy pandas pytest numba pyarrow graphviz python-graphviz pcre catboost libcxx=9.0.0 notebook scikit-learn lightgbm py-xgboost # $OPTIONAL_PACKAGES
  - which pip
  - source activate test-environment
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      conda install gxx_linux-64 -y;
    fi
  - source deactivate
  - source activate test-environment
  - which pip
  - pip install python-dateutil==2.8.0  # botocore caps dateutil leading to issues
  - pip install -r requirements.txt
  - pip install -r requirements-ml.txt
install:
  - source activate test-environment
  - (cd packages/vaex-core; pip install -v .)
  - (cd packages/vaex-hdf5; pip install .)
  - (cd packages/vaex-arrow; pip install .)
  - (cd packages/vaex-viz; pip install .)
  - (cd packages/vaex-server; pip install .)
  - (cd packages/vaex-astro; pip install .)
  - (cd packages/vaex-distributed; pip install .)
  - (cd packages/vaex-jupyter; pip install .)
  - (cd packages/vaex-ui; pip install .)
  - (cd packages/vaex-ml; pip install .)
  - (cd packages/vaex-graphql; pip install .)
  # - source activate dev
  # - (cd packages/vaex-core; pip install .)
  # - (cd packages/vaex-hdf5; pip install .)
  # - (cd packages/vaex-viz; pip install .)
  # - (cd packages/vaex-server; pip install .)
script:
  - source activate test-environment
  - python -m vaex.test.dataset TestDataset
  # - py.test packages/vaex-core/vaex/test/dataset.py::TestDataset
  - py.test tests/ ${PYTEST_EXTRA_ARGS}
  # - runipy examples/tutorial_ipython_notebook.ipynb
  # - runipy examples/advanced_plotting.ipynb
  # - source activate dev
  # - python -m vaex.test.dataset TestDataset
# - export PACKAGE_NAME=`python -c "import vaex; print vaex.__build_name__"`
# - python bin/make_dropbox_uploader_conf.py ~/.dropbox_uploader
# - curl "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh" -o dropbox_uploader.sh
# - bash dropbox_uploader.sh upload setup.py setup.py
# - if [[ $TRAVIS_OS_NAME == osx ]] && [[ "$TRAVIS_TAG" != "" ]]; then echo "release"; bash bin/build_binary_osx.sh; fi
# - if [[ $TRAVIS_OS_NAME == linux ]] && [[ "$TRAVIS_TAG" != "" ]]; then echo "release"; pip install pyinstaller; pyinstaller vaex.spec; fi
# - ls dist
# - if [[ $TRAVIS_OS_NAME == osx ]] && [[ "$TRAVIS_TAG" != "" ]]; then bash dropbox_uploader.sh upload dist/${PACKAGE_NAME}.zip ${PACKAGE_NAME}.zip; fi
# - if [[ $TRAVIS_OS_NAME == linux ]] && [[ "$TRAVIS_TAG" != "" ]]; then cd dist; tar zcfv ${PACKAGE_NAME}.tar.gz ${PACKAGE_NAME}; bash ../dropbox_uploader.sh upload ${PACKAGE_NAME}.tar.gz ${PACKAGE_NAME}.tar.gz; cd ..; fi



